export default function UserForm({ onSubmit, isLoading, user }) {
    return (
        <form className="max-w-md" onSubmit={onSubmit}>
            <div className="flex gap-4">
                <div className="form-group">
                    <label htmlFor="firstName">Nome</label>
                    <input type="text" name="firstName" id="firstName" required
                        defaultValue={user?.firstName} />
                    {/* 'user?.firstName' para verificar se existe o nome e colocar no campo */}
                </div>
                <div className="form-group">
                    <label htmlFor="lastName">Apelido</label>
                    <input type="text" name="lastName" id="lastName" required defaultValue={user?.lastName} />
                </div>
            </div>

            <div className="form-group">
                <label htmlFor="email">Email</label>
                <input type="email" name="email" id="email" required defaultValue={user?.email} />
            </div>
            <div className="form-group">
                <label htmlFor="password">{user ? "Nova Password" : "Password"}</label>
                <input
                    type="password"
                    name="password"
                    id="password"
                    required={user ? undefined : true}
                    autoComplete="new-password" />
            </div>

            <div className="flex gap-4">
                <div className="form-group">
                    <label htmlFor="birthday">Data de Nascimento</label>
                    <input type="date" name="birthday" id="birthday" required
                        defaultValue={user?.birthday.split("T")[0]} />
                </div>
                <div className="form-group">
                    <label>Genêro</label>
                    <div>
                        <label htmlFor="male">
                            M{" "}
                            <input type="radio"
                                name="gender"
                                value="M"
                                id="male"
                                required
                                defaultChecked={user?.gender === "M"} />
                        </label>
                        <label htmlFor="male" className="mx-4">
                            F{" "}
                            <input type="radio"
                                name="gender"
                                value="F"
                                id="male"
                                required
                                defaultChecked={user?.gender === "F"} />
                        </label>
                        {/* <label htmlFor="anonymous">
                                X{" "}
                                <input type="radio" 
                                name="gender" 
                                value="X"
                                id="anonymous" 
                                required 
                                defaultChecked={user?.gender === "X"}/>
                            </label> */}
                    </div>
                </div>
            </div>

            <div className="flex gap-4">
                <div className="form-group">
                    <label htmlFor="phone">Telefone</label>
                    <input type="number" name="phone" id="phone" required
                        defaultValue={user?.phone} />
                </div>
                <div className="form-group">
                    <label htmlFor="role">Função</label>
                    <select name="role" id="role" className="w-full cursor-pointer"
                        defaultValue={user?.role}>
                        <option value="user">Usuário</option>
                        <option value="admin">Administrador</option>
                        <option value="student">Aluno</option>
                        <option value="teacher">Professor</option>
                    </select>
                </div>
            </div>
            <button
                disabled={isLoading}
                className="bg-sky-500
                     hover:bg-sky-600 transition-all p-2
                      text-white disabled:bg-zinc-500 
                      w-full">
                {user ? "Salvar alterações" : "Criar Usuário"}
            </button>
        </form>
    )
}
---------------------------------------------------------------------------
import {models, model, Schema} from "mongoose";
import bcrypt from "bcrypt";

const userSchema = new Schema({
    firstName:{
        type: String,
        required: true
    },
    lastName:{
        type: String,
        required: true
    },
    email: {
        type: String,
        lowercase: true,
        unique: true,
        required: true
    },
    password:{
        type: String,
        required: true,
        select: false
    },
    birthday:{
        type: Date,
        required: true
    },
    gender:{
        type: String,
        enum: ["M", "F", "X"],
        required: true
    },
    phone:{
        type: Number,
        required: true
    },
    role:{
        type: String,
        enum: ["user", "admin", "student", "teacher"],
        required: true
    },
    createdAt:{
        type: Date,
        required: true
    },
    updatedAt:{
        type: Date,
        required: true
    }
});
   //creating crypted password with 'bycrypt'
userSchema.pre("save", async function(){
    if(!this.isModified("password")) return;
    //mas se a palavra passe nao for igual ele vai encriptar
    this.password = await bcrypt.hash(this.password, 12)
})

//creating models
const User = models.User || model("User", userSchema)

export default User;